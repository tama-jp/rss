// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/tama-jp/rss/internal/adapter/controllers"
	"github.com/tama-jp/rss/internal/adapter/gateways/repository"
	"github.com/tama-jp/rss/internal/frameworks/config"
	"github.com/tama-jp/rss/internal/frameworks/database"
	"github.com/tama-jp/rss/internal/frameworks/logger"
	"github.com/tama-jp/rss/internal/frameworks/middleware"
	"github.com/tama-jp/rss/internal/frameworks/routing"
	"github.com/tama-jp/rss/internal/usecases/interactor"
	"github.com/tama-jp/rss/pkg/app"
)

// Injectors from wire.go:

func InitializeApp(conf *config.Config, dbConn *db.DataBase, r *gin.Engine, logger2 *logger.LogBase) app.App {
	jwtRepository := middleware.NewJwtRepository()
	userPort := repository.NewUserRepository(dbConn, logger2)
	userAuthPort := repository.NewUserAuthRepository(dbConn, logger2)
	loggerPort := repository.NewLoggerRepository(conf, dbConn, logger2)
	accessTokenInteractor := interactor.NewAccessTokenInteractor(jwtRepository, userPort, userAuthPort, loggerPort)
	accessTokenController := controllers.NewAccessTokenController(accessTokenInteractor)
	jwtInteractor := middleware.NewJwtInteractor(jwtRepository, userPort, userAuthPort, loggerPort)
	corsInteractor := middleware.NewCorsInteractor()
	userInteractor := interactor.NewUserInteractor(jwtRepository, userPort, userAuthPort, loggerPort)
	userController := controllers.NewUserController(userInteractor)
	userRolePort := repository.NewUserRoleRepository(dbConn, logger2)
	systemUserInteractor := interactor.NewSystemUserInteractor(jwtRepository, userPort, userRolePort, userAuthPort, loggerPort)
	systemUserController := controllers.NewSystemUserController(systemUserInteractor)
	routingRouting := routing.NewRouting(conf, dbConn, r, logger2, accessTokenController, jwtInteractor, corsInteractor, userController, systemUserController)
	appApp := app.NewApp(conf, dbConn, routingRouting)
	return appApp
}

// wire.go:

var superSet = wire.NewSet(controllers.Set, interactor.Set, repository.Set, routing.Set, middleware.Set, app.NewApp)
